// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

var sum = 0;
var arr = [1,2];
var x;
var y;
var total = 0;

function euler2() {
    do {
        //Find the sum of the last two numbers in the array and add their total to the array.
        x = arr[arr.length - 1];
        y = arr[arr.length - 2];
        if(x < 4000000){
        sum = x + y;
        arr.push(sum);
        }
    } while (
        //The last number in array is less than 4000000. This will not stop the loop before x is > 4000000 but it will keep it from going forever. That is why the previous if statement was needed, as well as the following pop.
        x < 4000000
    )
    arr.pop();
    // console.log(arr);
    for(var i = 0; i < arr.length; i++){
        if(arr[i]%2 == 0){
            total += arr[i];
        }
    }
    console.log(total);
}

euler2();